############################
### GLOBAL CONFIGURATION ###
############################

# List all Window Manager and Terminal Manager binary names
wmlist=(dwm wmii)
tmlist=(dvtm screen)

# Allow console login?
allowconsole=yes

# Allow shutdown?
allowshutdown=yes
shutdowncommand='sudo shutdown -P now'
rebootcommand='sudo shutdown -r now'

# Set configuration for specific users?
#userconfig=(courtney)

##########################
### USER CONFIGURATION ###
##########################

#courtney() {
#  # Opitons for the menu
#  wmlist=(openbox-session)
#  tmlist=()
#  allowconsole=yes
#  allowshutdown=no
#
#  # Set specific display for user
#  # (Not honored unless locktty=yes)
#  # display=1
#}

############################
### SYSTEM CONFIGURATION ###
############################

# Set default display
display=0

# Where should first X tty be spawned?
xtty=7

# Restrict tty? (By default, sldm increments X tty, this setting
# allows administrators to lock users into one specific tty by
# setting the display=N option on a per-user basis.)
locktty=no

# Enable login shell (fixes issues with some keymaps, uses bash).
# Note that your bash scripts won't have any terminal as stdin when
# started in this way. This may break some commands, including stty,
# unless you explicitly check for [ -t 0 ] or that every login shell
# is also interactive. However, we're sending stdout and stderr to
# /dev/null, so you won't see the complaints.
loginshell=yes

# Additional arguments to pass to X server; it will be called as:
#  exec /usr/bin/X :$display $serverargs vt$((xtty+display))
serverargs="-nolisten tcp -dpi 96"
